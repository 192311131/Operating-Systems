#include <stdio.h>

void sjf(int n, int burst_time[], int process[]) {
    int wait_time[n], turn_time[n], comp_time[n];
    int total_wait = 0, total_turn = 0;

    // Sort processes based on burst time
    for (int i = 0; i < n - 1; i++) {
        for (int j = i + 1; j < n; j++) {
            if (burst_time[i] > burst_time[j]) {
                int temp = burst_time[i];
                burst_time[i] = burst_time[j];
                burst_time[j] = temp;

                temp = process[i];
                process[i] = process[j];
                process[j] = temp;
            }
        }
    }

    // Calculate completion, turnaround, and waiting times
    comp_time[0] = burst_time[0];
    turn_time[0] = comp_time[0];
    wait_time[0] = 0;

    for (int i = 1; i < n; i++) {
        comp_time[i] = comp_time[i - 1] + burst_time[i];
        turn_time[i] = comp_time[i];
        wait_time[i] = turn_time[i] - burst_time[i];
    }

    // Display process details
    printf("Process\tBurst Time\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < n; i++) {
        total_wait += wait_time[i];
        total_turn += turn_time[i];
        printf("P%d\t%d\t\t%d\t\t%d\n", process[i], burst_time[i], wait_time[i], turn_time[i]);
    }

    printf("\nAverage Waiting Time: %.2f", (float)total_wait / n);
    printf("\nAverage Turnaround Time: %.2f\n", (float)total_turn / n);
}

int main() {
    int n;
    printf("Enter the number of processes: ");
    scanf("%d", &n);

    int burst_time[n], process[n];
    for (int i = 0; i < n; i++) {
        process[i] = i + 1;
        printf("Enter burst time for process P%d: ", i + 1);
        scanf("%d", &burst_time[i]);
    }

    sjf(n, burst_time, process);
    return 0;
}
