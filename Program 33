#include <stdio.h>

int pageTable[3];
int pages[] = {1, 2, 3, 4, 2, 1, 5, 6};
int pageFaults = 0;

void optimal() {
    for (int i = 0; i < 8; i++) {
        int found = 0;
        for (int j = 0; j < 3; j++) {
            if (pageTable[j] == pages[i]) {
                found = 1;
                break;
            }
        }
        if (!found) {
            int farthest = 0;
            for (int j = 0; j < 3; j++) {
                int dist = 0;
                for (int k = i + 1; k < 8; k++) {
                    if (pageTable[j] == pages[k]) {
                        dist = k - i;
                        break;
                    }
                }
                if (dist > farthest) {
                    farthest = dist;
                    pageTable[j] = pages[i];
                }
            }
            pageFaults++;
        }
    }
    printf("Page Faults: %d\n", pageFaults);
}

int main() {
    optimal();
    return 0;
}
